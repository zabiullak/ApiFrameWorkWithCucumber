[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-02-10T19:30:14.361Z",
        "line": 13,
        "name": "Verify if Place is being Successfully added using AddPlaceAPI",
        "description": "",
        "id": "validating-place-api-s;verify-if-place-is-being-successfully-added-using-addplaceapi;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "error_message": "java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.reflection.ReflectionCache\r\n\tat org.codehaus.groovy.runtime.dgmimpl.NumberNumberMetaMethod.\u003cclinit\u003e(NumberNumberMetaMethod.java:33)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.createMetaMethodFromClass(MetaClassRegistryImpl.java:258)\r\n\tat org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.\u003cinit\u003e(MetaClassRegistryImpl.java:111)\r\n\tat org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.\u003cinit\u003e(MetaClassRegistryImpl.java:86)\r\n\tat groovy.lang.GroovySystem.\u003cclinit\u003e(GroovySystem.java:36)\r\n\tat org.codehaus.groovy.runtime.InvokerHelper.\u003cclinit\u003e(InvokerHelper.java:86)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.createMap(ScriptBytecodeAdapter.java:635)\r\n\tat io.restassured.internal.ResponseParserRegistrar.\u003cinit\u003e(ResponseParserRegistrar.groovy)\r\n\tat io.restassured.RestAssured.\u003cclinit\u003e(RestAssured.java:346)\r\n\tat stepDefinitions.PlaceValidation.add_Place_Payload_with(PlaceValidation.java:32)\r\n\tat âœ½.Add Place Payload with \"AAhouse\"  \"English\" \"World cross center\"(file:src/test/java/feature/PlaceValidation.feature:4)\r\n",
              "duration": 121078900,
              "status": "failed"
            },
            "line": 4,
            "name": "Add Place Payload with \"AAhouse\"  \"English\" \"World cross center\"",
            "match": {
              "arguments": [
                {
                  "val": "\"AAhouse\"",
                  "offset": 23
                },
                {
                  "val": "\"English\"",
                  "offset": 34
                },
                {
                  "val": "\"World cross center\"",
                  "offset": 44
                }
              ],
              "location": "PlaceValidation.add_Place_Payload_with(String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 53800,
              "status": "skipped"
            },
            "line": 5,
            "name": "user calls \"AddPlaceAPI\" with \"POST\" http request",
            "match": {
              "arguments": [
                {
                  "val": "\"AddPlaceAPI\"",
                  "offset": 11
                },
                {
                  "val": "\"POST\"",
                  "offset": 30
                }
              ],
              "location": "PlaceValidation.user_calls_with_http_request(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34200,
              "status": "skipped"
            },
            "line": 6,
            "name": "the API call got success with status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 42
                }
              ],
              "location": "PlaceValidation.the_API_call_got_success_with_status_code(Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 24300,
              "status": "skipped"
            },
            "line": 7,
            "name": "\"status\" in response body is \"OK\"",
            "match": {
              "arguments": [
                {
                  "val": "\"status\"",
                  "offset": 0
                },
                {
                  "val": "\"OK\"",
                  "offset": 29
                }
              ],
              "location": "PlaceValidation.in_response_body_is(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35500,
              "status": "skipped"
            },
            "line": 8,
            "name": "\"scope\" in response body is \"APP\"",
            "match": {
              "arguments": [
                {
                  "val": "\"scope\"",
                  "offset": 0
                },
                {
                  "val": "\"APP\"",
                  "offset": 28
                }
              ],
              "location": "PlaceValidation.in_response_body_is(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15900,
              "status": "skipped"
            },
            "line": 9,
            "name": "verify place_Id created maps to \"AAhouse\" using \"getPlaceAPI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"AAhouse\"",
                  "offset": 32
                },
                {
                  "val": "\"getPlaceAPI\"",
                  "offset": 48
                }
              ],
              "location": "PlaceValidation.verify_place_Id_created_maps_to_using(String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@AddPlace"
          },
          {
            "name": "@Regression"
          }
        ]
      }
    ],
    "name": "Validating Place API\u0027s",
    "description": "",
    "id": "validating-place-api-s",
    "keyword": "Feature",
    "uri": "file:src/test/java/feature/PlaceValidation.feature",
    "tags": []
  }
]